package com.ssm.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.ssm.common.ApiServiceException;
import com.ssm.po.Article;
import com.ssm.po.Column;
import com.ssm.po.ColumnArticleTitle;
import com.ssm.po.HotArticle;

public interface ColumnMapper {
	/**
	 * 文章分页
	 *
	 * @param columnID 栏目id
	 * @return
	 */
	public List<Article> findArticleByPage(int columnID);

	/**
	 * 根据文章ID 栏目ID 获取栏目标题
	 * @param Aid
	 * @return
	 */
	public String getColumnTitle(int Aid,int columnID);
	/**
	 * 根据栏目ID 获取栏目标题
	 * @param Aid
	 * @return
	 */
	public String getColumnTitleById(int columnID);

	/**
	 * 获取栏目与栏目下的文章
	 * @param columnID
	 * @return
	 * @throws ApiServiceException
	 */
	public List<ColumnArticleTitle> getColumnArticleTitle(List<Integer> arr)throws ApiServiceException;
	
	/**
	 * 获取所有首页 栏目ID
	 * @return
	 * @throws ApiServiceException
	 */
	public List<Integer> index()throws ApiServiceException;
	
	/**
	 * 获取所有栏目
	 * @return
	 * @throws ApiServiceException
	 */
	public List<Column> getColumns()throws ApiServiceException;
	
	/**
	 * 获取所有栏目标题
	 * @return
	 * @throws ApiServiceException
	 */
	public List<Column> getColumnTitles()throws ApiServiceException;
	/**
	 * 根据栏目ID获取文章
	 * @param columnID 栏目id
	 * @return
	 * @throws ApiServiceException
	 */
	public List<Article> getArticles(int columnID) throws ApiServiceException ;
	/**
	 * 获取指定栏目的文章数量
	 * @param columnID 栏目id
	 * @return
	 * @throws ApiServiceException
	 */
	public int countSize(int columnID) throws ApiServiceException ;
	/**
	 * 新增栏目
	 * @param column 栏目对象
	 * @return
	 * @throws ApiServiceException
	 */
	public int saveColumn(Column column) throws ApiServiceException ;
	/**
	 * 修改栏目
	 * @param column 栏目对象
	 * @return
	 * @throws ApiServiceException
	 */
	public int updateColumn(Column column) throws ApiServiceException ;
	
	/**
	 * 删除栏目
	 * @param columnID 栏目ID
	 * @return
	 * @throws ApiServiceException
	 */
	public int removeColumn(int columnID) throws ApiServiceException ;
	
	/**
	 * 文章分页
	 * @return
	 * @
	 */
	public List<Article> listArticlePage(int columnID);
	
	/**
	 * 批量删除 栏目 下的 所选中文章
	 * @param Aids
	 * @param columnID
	 * @return
	 * @throws Exception
	 */
	public int removeArticles(@Param(value = "Aids")int[] Aids,@Param(value = "columnID")int columnID)throws Exception;
	/**
	 * 删除 栏目 下的 所选中文章
	 * @param Aids
	 * @param columnID
	 * @return
	 * @throws Exception
	 */
	public int deleteArticle(@Param(value = "aid")int aid,@Param(value = "columnID")int columnID)throws Exception;
	/**
	 * 增加热门文章
	 * @param hot
	 * @return
	 */
	public int hotArticle(HotArticle hot);
	
	/**
	 * 取消热门文章
	 * @param hot
	 * @return
	 */
	public int reduceArticle(HotArticle hot);
}
